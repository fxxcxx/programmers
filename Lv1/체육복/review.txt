탐욕 알고리즘이란 그 순간순간 마다 최적의 결정을 내려
최종에 도달하는 문제 해결방식이다.

예를 들어 그 분기마다 최고 값인 숫자를 찾아서 최종 결과 값에 도달하는 것이 있다.
그러나 이 탐욕 알고리즘은, 최종 결과가 최적의 값이라는 보장은 없다.

하지만 빠른 계산 속도가 이러한 단점들을 보완하며,
몇몇 문제에선 탐욕 알고리즘 방식으로 최적의 해를 찾아낼 수 있다.

체육복 문제 부제목이 '탐욕법'이라서 서치하고 풀었는데,
이해가 잘 안가서 그다지 도움은 되지 않았다.

여기서 킥은 lost와 reserve 현황을 계산해서 
체육복 개수 현황을 담을 vector<int> list(n,1)을 선언하는 것이다.
이는 1의 값을 가진 n개의 원소를 list에 만든다는 뜻이다.

따라서 lost와 reserve에 따라서 --와 ++를 해주면 된다.
또 하나 중요한 점은 배열이므로 실제 값에서 -1 한 값을 주소로 삼아야 한다는 점.

그 이후엔 list.size()만큼 for문을 돌려서
체육복 개수 현황을 상황에 알맞가 +- 하면 되는 것이다.
탐욕법이 여기서 쓰이는 건가? 먼저 처음 값과 마지막 값일때의 조건을 설정해주더라.

솔직히 넘나 복잡한 것~
